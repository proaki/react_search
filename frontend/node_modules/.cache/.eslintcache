[{"C:\\Users\\hiro\\react_project\\react_search\\react_search\\frontend\\src\\index.js":"1","C:\\Users\\hiro\\react_project\\react_search\\react_search\\frontend\\src\\App.js":"2"},{"size":454,"mtime":1626950988573,"results":"3","hashOfConfig":"4"},{"size":16622,"mtime":1627718385767,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1xs7kw",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\hiro\\react_project\\react_search\\react_search\\frontend\\src\\index.js",[],["12","13"],"C:\\Users\\hiro\\react_project\\react_search\\react_search\\frontend\\src\\App.js",["14"],"import React, {useState} from 'react';\nimport {DataSearch, ReactiveBase, ReactiveList, ResultList, SelectedFilters, SingleRange, RangeSlider, MultiDataList, DateRange} from '@appbaseio/reactivesearch';\nimport './SteamSearch.css';\nimport reactStringReplace from \"react-string-replace\";\nimport 校長 from \"./img/zoomロン２.jpg\";\n\nconst ItemList = [\"http://localhost:4000\"];\nconst regExp = /(https?:\\/\\/\\S+)/g;\n\n\nconst { ResultListWrapper } = ReactiveList;\n\nconst App = () => {\n    const [isClicked, setIsClicked] = useState(false);\n    const [message, setMessage] = useState(\"🔬Show Filters\");\n    // const [linked, setLinked] = useState();\n\n    \n      const handleClick = () => {        \n        setIsClicked(!isClicked)\n        setMessage(isClicked ? \"🔬 Show Filters\" : \"🎮 Show Games\")     \n      };\n\n    //   const handleClick2 = () => {        \n    //       setLinked(\"./chat-bot/chat-bot/src/App.jsx\")\n    //   }\n        \n        return (\n            <div className=\"main-container\">\n                <ReactiveBase\n                    app=\"steam-search\"\n                    url=\"http://52.142.54.111:9200\"\n                    theme={\n                        {\n                            typography: {\n                                fontFamily: 'Arial, Helvetica, sans-serif',\n                                fontSize: '16px',\n                            },\n                            colors: {\n                                titleColor: '#c7d5e0',\n                                textColor: '#c7d5e0',\n                                backgroundColor: '#212121',\n                                primaryColor: '#CC9900',\n                            }\n                        }\n                    }\n                >\n                    <DataSearch\n                        componentId=\"title\"\n                        dataField={[\"ResponseName\"]}\n                        queryFormat=\"and\"\n                        placeholder=\"enter search term\"\n                        showIcon={false}\n                        title=\"Steam Search\"\n                        className=\"data-search\"\n                        innerClass={{\n                            input: 'input',\n                            list: 'list',\n                        }}\n                    />\n                    <SelectedFilters/>\n\n                    <div className=\"sub-container\">\n                            <div\n                                className={\n                                isClicked ? \"left-bar-optional\" : \"left-bar\"\n                                }   \n                            >\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-pied-piper-alt\" /> Genres{\" \"}\n                                    </b>\n                                </div>\n\n                                <MultiDataList\n                                    componentId=\"genres-list\"\n\n                                    dataField=\"Genre\"\n                                    \n                                    className=\"genres-filter\"\n                                    size={100}\n                                    queryFormat=\"or\"\n                                    selectAllLabel=\"All Genres\"\n                                    placeholder=\"Search for a genre\"     \n                                    react={{\n                                        and: [\n                                            \"title\",\n                                            \"date-filter\",\n                                            \"RangeSlider\",\n                                            \"price-list\",\n                                            \"resultLists\"\n                                        ]\n                                        }}                               \n                                    data={[\n                                        {\n                                            label: \"Action\",\n                                            value: \"Action\"\n                                        },\n                                        {\n                                            label: \"Adventure\",\n                                            value: \"Adventure\"\n                                        },\n                                        {\n                                            label: \"Casual\",\n                                            value: \"Casual\"\n                                        },\n                                        {\n                                            label: \"EarlyAccess\",\n                                            value: \"EarlyAccess\"\n                                        },\n                                        {\n                                            label: \"FreeToPlay\",\n                                            value: \"FreeToPlay\"\n                                        },\n                                        {\n                                            label: \"Indie\",\n                                            value: \"Indie\"\n                                        },\n                                        {\n                                            label: \"MassivelyMultiplayer\",\n                                            value: \"MassivelyMultiplayer\"\n                                        },\n                                        {\n                                            label: \"NonGame\",\n                                            value: \"NonGame\"\n                                        },\n                                        {\n                                            label: \"Racing\",\n                                            value: \"Racing\"\n                                        },\n                                        {\n                                            label: \"RPG\",\n                                            value: \"RPG\"\n                                        },\n                                        {\n                                            label: \"Simulation\",\n                                            value: \"Simulation\"\n                                        },\n                                        {\n                                            label: \"Sports\",\n                                            value: \"Sports\"\n                                        },\n                                        {\n                                            label: \"Strategy\",\n                                            value: \"Strategy\"\n                                        },\n                                    ]}\n                                    showFilter={true}\n                                    showCount={true}\n                                    URLParams={false}\n                                    innerClass={{\n                                        label: \"list-item\",\n                                        input: \"input\"\n                                    }}\n                                />  \n\n                                <hr className=\"blue\" />                             \n\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-dollar\" /> PriceFinal{\" \"}\n                                    </b>\n                                </div>\n                                <SingleRange\n                                    componentId=\"price-list\"\n                                    dataField=\"PriceFinal\"\n                                    className=\"price-filter\"\n                                    data={[\n                                        { start: 0.00, end: 5.00, label: \"~ $5\" },\n                                        { start: 5.00, end: 10.00, label: \"$5 - $10\" },\n                                        { start: 10.00, end: 50.00, label: \"$10 - $50\" },\n                                        { start: 50.00, end: 100.00, label: \"$50 - $100\" },\n                                        { start: 100.00, end: 500.00, label: \"$100 ~\" }\n                                    ]}\n                                    showRadio={true}\n                                    showFilter={true}\n                                    URLParams={false}\n                                    innerClass={{\n                                        label: \"price-label\",\n                                        radio: \"price-radio\"\n                                    }}\n                                />                                \n                                <hr className=\"blue\" />\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        <i className=\"fa fa-star\" /> Reccomend\n                                        (Only:100~1000👍)\n                                    </b>\n                                </div>\n                                <RangeSlider\n                                    componentId=\"RangeSlider\"\n                                    dataField=\"RecommendationCount\"\n                                    className=\"range-slider\"\n                                    range={{\n                                        start: 100,\n                                        end: 1000\n                                    }}\n                                    rangeLabels={{\n                                        start: \"Umm...\",\n                                        end: \"So Good!\"\n                                    }}\n                                    react={{\n                                        and: [\n                                            \"title\",\n                                            \"date-filter\",\n                                            \"genres-list\",\n                                            \"price-list\",\n                                            \"resultLists\",\n                                        ]\n                                    }}\n                                    innerClass={{                                        \n                                        label: \"range-label\"\n                                    }}\n                                />\n                                <hr className=\"blue\" />\n                             \n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-calendar\" /> Release Date{\" \"}\n                                    </b>\n                                </div>\n                                <DateRange\n                                    componentId=\"date-filter\"\n                                    dataField=\"ReleaseDate\"\n                                    className=\"datePicker\"\n                                />\n                                <hr className=\"blue\" />\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\"\"}\n                                        <i className=\"fa fa-pied-piper-alt\" /> Chat-Bot{\" \"}\n                                    </b>\n\n\n\n                                    <div className=\"chat-box\">\n                                        {ItemList.map((item) => {\n                                        return (\n                                            <div>\n                                                {reactStringReplace(item, regExp, (match, i) => (\n                                                    <a className=\"a\" href={match}>\n                                                        <img className=\"src\" src={校長} width=\"100\" height=\"100\"/>\n                                                    </a>\n                                                ))}\n                                            </div>\n                                        )\n                                        })}\n                                    </div>                                    \n\n                                </div>                \n                                \n\n                            </div>\n\n                            <div\n                                className={\n                                    isClicked ? \"result-container-optional\" : \"result-container\"\n                                }\n                            >                          \n                                <ReactiveList\n                                    defaultQuery={() => ({ track_total_hits: true })}\n                                    componentId=\"resultLists\"\n                                    dataField=\"ResponseName\"\n                                    size={25}\n                                    pagination={true}\n                                    react={{\n                                        \"and\": [\n                                            \"title\",\n                                            \"price-list\",\n                                            \"genres-list\",\n                                            \"RangeSlider\",\n                                            \"date-filter\",\n                                        ]\n                                    }}\n                                    sortOptions={[\n                                            {label: \"Best Match\", dataField: \"RecommendationCount\", sortBy: \"desc\"},\n                                            {label: \"Lowest Price\", dataField: \"PriceInitial\", sortBy: \"asc\"},\n                                            {label: \"Highest Price\", dataField: \"PriceInitial\", sortBy: \"desc\"},\n                                    ]}\n                                    className=\"result-list\"\n                                    innerClass={{\n                                        resultsInfo: \"resultsInfo\",\n                                        resultStats: \"resultStats\",\n                                    }}\n                                >\n                                    \n                                    {({data}) => (\n                                        <ResultListWrapper>\n                                            {\n                                                data.map(item => (\n                                                    <ResultList key={item._id}\n                                                                href={`https://store.steampowered.com/app/${item.ResponseID}`}\n                                                                className=\"listItem\"\n                                                    >\n                                                        <ResultList.Image className=\"image\" src={item.HeaderImage}/>\n                                                        <ResultList.Content>\n                                                            <ResultList.Title\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: item.ResponseName\n                                                                }}\n                                                            />\n                                                            <ResultList.Description>\n                                                            <p className=\"releaseDate\">{item.ReleaseDate}</p>\n                                                            <p className=\"price\">${item.PriceInitial}</p>\n                                                            </ResultList.Description>\n                                                        </ResultList.Content>\n                                                    </ResultList>\n                                                ))\n                                            }\n                                        </ResultListWrapper>\n                                    )}\n                                </ReactiveList>\n                            </div>\n                        <button\n                            className=\"toggle-button\"\n                            onClick={handleClick}\n                            >\n                            {message}\n                        </button>\n                    </div>\n                </ReactiveBase>\n            </div>\n        );\n    }\n\n\nexport default App;",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":248,"column":57,"nodeType":"21","endLine":248,"endColumn":113},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]