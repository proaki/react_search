{"ast":null,"code":"var _jsxFileName = \"/Users/akihiro/project/react_search/src/components/PersonList.js\";\nimport React from \"react\";\nimport Person from \"./Person\";\nimport CZButton from \"./CZButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.results\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error:\", \" \", error.message + \" if json returned 0, error from randomuser.org\", console.log(items)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    } else if (!isLoaded) {\n      // Show loading gif\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn.dribbble.com/users/597558/screenshots/1998465/comp-2.gif\",\n          alt: \"loading\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      // After loading\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [console.log(items), items.map(item => /*#__PURE__*/_jsxDEV(Person, {\n          className: \"person\",\n          Key: item.id.name + item.name.first,\n          imgSrc: item.picture.large,\n          Title: item.name.title,\n          FName: item.name.first,\n          children: [\" \", /*#__PURE__*/_jsxDEV(CZButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default PersonList;","map":{"version":3,"sources":["/Users/akihiro/project/react_search/src/components/PersonList.js"],"names":["React","Person","CZButton","PersonList","Component","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","results","render","message","console","log","map","item","id","name","first","picture","large","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD+B;AAAA;;AAOvCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGIG,MAAM,IAAI;AACR,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACAV,IAAAA,KAAK,IAAI;AACP,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BACE;AAAA,6BACS,GADT,EAEGA,KAAK,CAACY,OAAN,GAAgB,gDAFnB,EAGGC,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,MAQO,IAAI,CAACD,QAAL,EAAe;AACpB;AACA,0BACE;AAAA,+BACE;AACE,UAAA,GAAG,EAAC,sEADN;AAEE,UAAA,GAAG,EAAC,SAFN;AAGE,UAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAXM,MAWA;AACL;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACGY,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CADH,EAEGA,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACb,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAL,CAAQC,IAAR,GAAeF,IAAI,CAACE,IAAL,CAAUC,KAFhC;AAGE,UAAA,MAAM,EAAEH,IAAI,CAACI,OAAL,CAAaC,KAHvB;AAIE,UAAA,KAAK,EAAEL,IAAI,CAACE,IAAL,CAAUI,KAJnB;AAKE,UAAA,KAAK,EAAEN,IAAI,CAACE,IAAL,CAAUC,KALnB;AAAA,qBAOG,GAPH,eAQE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD;AACF;;AAtEsC;;AAyEzC,eAAetB,UAAf","sourcesContent":["import React from \"react\";\nimport Person from \"./Person\";\nimport CZButton from \"./CZButton\";\n\nclass PersonList extends React.Component {\n  state = {\n    error: null,\n    isLoaded: false,\n    items: []\n  };\n\n  componentDidMount() {\n    fetch(\"data.json\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result.results\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return (\n        <div>\n          Error:{\" \"}\n          {error.message + \" if json returned 0, error from randomuser.org\"}\n          {console.log(items)}\n        </div>\n      );\n    } else if (!isLoaded) {\n      // Show loading gif\n      return (\n        <div>\n          <img\n            src=\"https://cdn.dribbble.com/users/597558/screenshots/1998465/comp-2.gif\"\n            alt=\"loading\"\n            height=\"100\"\n          />\n        </div>\n      );\n    } else {\n      // After loading\n      return (\n        <div className=\"row\">\n          {console.log(items)}\n          {items.map(item => (\n            <Person\n              className=\"person\"\n              Key={item.id.name + item.name.first}\n              imgSrc={item.picture.large}\n              Title={item.name.title}\n              FName={item.name.first}\n            >\n              {\" \"}\n              <CZButton />\n            </Person>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default PersonList;\n"]},"metadata":{},"sourceType":"module"}