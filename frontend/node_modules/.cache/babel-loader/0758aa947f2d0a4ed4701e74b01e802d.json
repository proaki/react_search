{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiro\\\\react_project\\\\react_search\\\\react_search\\\\frontend\\\\src\\\\chat-bot\\\\chat-bot\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats, Loading } from './components/index';\nimport FormDialog from './components/Forms/FormDialog';\nimport { db } from './firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState(\"init\");\n  const [dataset, setDataset] = useState({});\n  const [open, setOpen] = useState(false);\n  const handleOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n  const addChats = useCallback(chat => {\n    setChats(prevChats => {\n      return [...prevChats, chat];\n    });\n  }, [setChats]);\n\n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n    addChats({\n      text: nextDataset.question,\n      type: 'question'\n    });\n    setAnswers(nextDataset.answers);\n    setCurrentId(nextQuestionId);\n  };\n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === 'contact':\n        handleOpen();\n        break;\n\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n\n      default:\n        addChats({\n          text: selectedAnswer,\n          type: 'answer'\n        });\n        setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 1000);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const initDataset = {};\n      await db.collection('questions').get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.id;\n          const data = doc.data();\n          initDataset[id] = data;\n        });\n      });\n      setDataset(initDataset);\n      displayNextQuestion(currentId, initDataset[currentId]);\n    })();\n  }, []);\n  useEffect(() => {\n    const scrollArea = document.getElementById(\"scroll-area\");\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"c-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-box\",\n      children: [Object.keys(dataset).length === 0 ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Chats, {\n          chats: chats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AnswersList, {\n          answers: answers,\n          select: selectAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(FormDialog, {\n        open: open,\n        handleOpen: handleOpen,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"T4/zXJtpPuBCjPFE41bCEP7IYho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hiro/react_project/react_search/react_search/frontend/src/chat-bot/chat-bot/src/App.jsx"],"names":["React","useState","useEffect","useCallback","AnswersList","Chats","Loading","FormDialog","db","App","answers","setAnswers","chats","setChats","currentId","setCurrentId","dataset","setDataset","open","setOpen","handleOpen","handleClose","addChats","chat","prevChats","displayNextQuestion","nextQuestionId","nextDataset","text","question","type","selectAnswer","selectedAnswer","test","a","document","createElement","href","target","click","setTimeout","initDataset","collection","get","then","snapshots","forEach","doc","id","data","scrollArea","getElementById","scrollTop","scrollHeight","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,EAAqBC,KAArB,EAA4BC,OAA5B,QAA0C,oBAA1C;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AAGA,QAAMmB,UAAU,GAAGjB,WAAW,CAAC,MAAM;AACnCgB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAF6B,EAE5B,CAACA,OAAD,CAF4B,CAA9B;AAIA,QAAME,WAAW,GAAGlB,WAAW,CAAC,MAAM;AACpCgB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAF8B,EAE7B,CAACA,OAAD,CAF6B,CAA/B;AAKA,QAAMG,QAAQ,GAAGnB,WAAW,CAAEoB,IAAD,IAAU;AACrCV,IAAAA,QAAQ,CAACW,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,IAAf,CAAP;AACD,KAFO,CAAR;AAGD,GAJ2B,EAI1B,CAACV,QAAD,CAJ0B,CAA5B;;AAMA,QAAMY,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,WAAjB,KAAiC;AAC3DL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAED,WAAW,CAACE,QADX;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAAD,CAAR;AAKEnB,IAAAA,UAAU,CAACgB,WAAW,CAACjB,OAAb,CAAV;AACAK,IAAAA,YAAY,CAACW,cAAD,CAAZ;AACH,GARD;;AAWA,QAAMK,YAAY,GAAG,CAACC,cAAD,EAAiBN,cAAjB,KAAoC;AACvD,YAAO,IAAP;AACE,WAAMA,cAAc,KAAK,SAAzB;AACEN,QAAAA,UAAU;AACV;;AAEF,WAAM,WAAWa,IAAX,CAAgBP,cAAhB,CAAN;AACE,cAAMQ,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,QAAAA,CAAC,CAACG,IAAF,GAASX,cAAT;AACAQ,QAAAA,CAAC,CAACI,MAAF,GAAW,QAAX;AACAJ,QAAAA,CAAC,CAACK,KAAF;AACA;;AAEF;AACEjB,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEI,cADC;AAEPF,UAAAA,IAAI,EAAE;AAFC,SAAD,CAAR;AAKAU,QAAAA,UAAU,CAAC,MAAMf,mBAAmB,CAACC,cAAD,EAAiBV,OAAO,CAACU,cAAD,CAAxB,CAA1B,EAAqE,IAArE,CAAV;AACA;AAnBJ;AAqBD,GAtBD;;AAyBAxB,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAW;AACV,YAAMuC,WAAW,GAAG,EAApB;AAEA,YAAMjC,EAAE,CAACkC,UAAH,CAAc,WAAd,EAA2BC,GAA3B,GAAiCC,IAAjC,CAAsCC,SAAS,IAAI;AACvDA,QAAAA,SAAS,CAACC,OAAV,CAAkBC,GAAG,IAAI;AACvB,gBAAMC,EAAE,GAAGD,GAAG,CAACC,EAAf;AACA,gBAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,EAAb;AACAR,UAAAA,WAAW,CAACO,EAAD,CAAX,GAAkBC,IAAlB;AACD,SAJD;AAKD,OANK,CAAN;AAQAhC,MAAAA,UAAU,CAACwB,WAAD,CAAV;AACAhB,MAAAA,mBAAmB,CAACX,SAAD,EAAY2B,WAAW,CAAC3B,SAAD,CAAvB,CAAnB;AACD,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgD,UAAU,GAAGf,QAAQ,CAACgB,cAAT,CAAwB,aAAxB,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACE,SAAX,GAAuBF,UAAU,CAACG,YAAlC;AACD;AACF,GALQ,CAAT;AAQA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACEC,MAAM,CAACC,IAAP,CAAYvC,OAAZ,EAAqBwC,MAArB,KAAgC,CAAjC,gBACa,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADb,gBAGa;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE5C;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEF,OAAtB;AAA+B,UAAA,MAAM,EAAEqB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBAJd,eASE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEb,IAAlB;AAAwB,QAAA,UAAU,EAAEE,UAApC;AAAgD,QAAA,WAAW,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnGD;;GAAMZ,G;;KAAAA,G;AAqGN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats, Loading} from './components/index';\nimport FormDialog from './components/Forms/FormDialog';\nimport {db} from './firebase/index';\n\nconst App = () => {\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState(\"init\");\n  const [dataset, setDataset] = useState({});\n  const [open, setOpen] = useState(false);\n\n  \n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  },[setOpen]);\n  \n  const handleClose = useCallback(() => {\n    setOpen(false)\n  },[setOpen]);\n\n\n  const addChats = useCallback((chat) => {\n    setChats(prevChats => {\n      return [...prevChats, chat]\n    })\n  },[setChats]);\n\n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n    addChats({\n      text: nextDataset.question,\n      type: 'question'\n    })\n    \n      setAnswers(nextDataset.answers)      \n      setCurrentId(nextQuestionId)\n  }    \n  \n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true) {      \n      case (nextQuestionId === 'contact'):\n        handleOpen();\n        break;\n\n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n      \n      default:    \n        addChats({\n          text: selectedAnswer,\n          type: 'answer'\n        })\n\n        setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 1000);\n        break;\n    }    \n  }\n\n\n  useEffect(() => {\n    (async() => {\n      const initDataset = {};\n\n      await db.collection('questions').get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.id\n          const data = doc.data()\n          initDataset[id] = data\n        })\n      })\n\n      setDataset(initDataset)\n      displayNextQuestion(currentId, initDataset[currentId])\n    })()\n  }, [])\n\n  useEffect(() => {\n    const scrollArea = document.getElementById(\"scroll-area\")\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  })\n\n  \n  return (\n    <section className=\"c-section\">\n      <div className=\"c-box\">\n      {(Object.keys(dataset).length === 0) ? (\n                    <Loading />\n                ) : (\n                    <>\n                        <Chats chats={chats} />\n                        <AnswersList answers={answers} select={selectAnswer}/>\n                    </>\n                )}\n        <FormDialog open={open} handleOpen={handleOpen} handleClose={handleClose}/>\n      </div>      \n    </section>\n  )  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}