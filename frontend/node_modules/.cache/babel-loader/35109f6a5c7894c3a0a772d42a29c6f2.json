{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiro\\\\react_project\\\\react_search\\\\react_search\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { DataSearch, ReactiveBase, ReactiveList, ResultList, SelectedFilters, MultiList, SingleRange, RangeSlider, MultiDataList, DateRange } from '@appbaseio/reactivesearch';\nimport './SteamSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  ResultListWrapper\n} = ReactiveList;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClicked: false,\n      message: \"ðŸ”¬Show Filters\"\n    };\n  }\n\n  handleClick() {\n    this.setState({\n      isClicked: !this.state.isClicked,\n      message: this.state.isClicked ? \"ðŸ”¬ Show Filters\" : \"ðŸŽ¬ Show Movies\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(ReactiveBase, {\n        app: \"steam-search\",\n        url: \"http://52.142.54.111:9200\",\n        theme: {\n          typography: {\n            fontFamily: 'Arial, Helvetica, sans-serif',\n            fontSize: '16px'\n          },\n          colors: {\n            titleColor: '#c7d5e0',\n            textColor: '#c7d5e0',\n            backgroundColor: '#212121',\n            primaryColor: '#2B475E'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataSearch, {\n          componentId: \"title\",\n          dataField: [\"ResponseName\"],\n          queryFormat: \"and\",\n          placeholder: \"enter search term\",\n          showIcon: false,\n          title: \"Steam Search\",\n          className: \"data-search\",\n          innerClass: {\n            input: 'input',\n            list: 'list'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectedFilters, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.state.isClicked ? \"left-bar-optional\" : \"left-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-heading center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-pied-piper-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), \" Genres\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MultiList, {\n              componentId: \"genres-list\",\n              const: true,\n              genre: [\"RPG\"],\n              dataField: [\"GenreIs`{$genre}`\"],\n              className: \"genres-filter\",\n              size: 20,\n              sortBy: \"asc\",\n              queryFormat: \"or\",\n              selectAllLabel: \"All Genres\",\n              showCheckbox: true,\n              showCount: true,\n              showSearch: true,\n              placeholder: \"Search for a Genre\",\n              react: {\n                and: [\"mainSearch\", \"results\", \"date-filter\", \"RangeSlider\", \"language-list\", \"revenue-list\"]\n              },\n              showFilter: true,\n              filterLabel: \"Genre\",\n              URLParams: false,\n              innerClass: {\n                label: \"list-item\",\n                input: \"list-input\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-heading center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-dollar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this), \" Revenue\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SingleRange, {\n              componentId: \"revenue-list\",\n              dataField: \"ran_revenue\",\n              className: \"revenue-filter\",\n              data: [{\n                start: 0,\n                end: 1000,\n                label: \"< 1M\"\n              }, {\n                start: 1000,\n                end: 10000,\n                label: \"1M-10M\"\n              }, {\n                start: 10000,\n                end: 500000,\n                label: \"10M-500M\"\n              }, {\n                start: 500000,\n                end: 1000000,\n                label: \"500M-1B\"\n              }, {\n                start: 1000000,\n                end: 10000000,\n                label: \"> 1B\"\n              }],\n              showRadio: true,\n              showFilter: true,\n              filterLabel: \"Revenue\",\n              URLParams: false,\n              innerClass: {\n                label: \"revenue-label\",\n                radio: \"revenue-radio\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-heading center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this), \" Ratings\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(RangeSlider, {\n              componentId: \"RangeSlider\",\n              dataField: \"vote_average\",\n              className: \"review-filter\",\n              range: {\n                start: 0,\n                end: 10\n              },\n              rangeLabels: {\n                start: \"0\",\n                end: \"10\"\n              },\n              react: {\n                and: [\"mainSearch\", \"results\", \"language-list\", \"date-Filter\", \"genres-list\", \"revenue-list\"]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-heading center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this), \" Languages\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MultiDataList, {\n              componentId: \"language-list\",\n              dataField: \"original_language.raw\",\n              className: \"language-filter\",\n              size: 100,\n              sortBy: \"asc\",\n              queryFormat: \"or\",\n              selectAllLabel: \"All Languages\",\n              showCheckbox: true,\n              showSearch: true,\n              placeholder: \"Search for a language\",\n              react: {\n                and: [\"mainSearch\", \"results\", \"date-filter\", \"RangeSlider\", \"genres-list\", \"revenue-list\"]\n              },\n              data: [{\n                label: \"English\",\n                value: \"English\"\n              }, {\n                label: \"Chinese\",\n                value: \"Chinese\"\n              }, {\n                label: \"Turkish\",\n                value: \"Turkish\"\n              }, {\n                label: \"Swedish\",\n                value: \"Swedish\"\n              }, {\n                label: \"Russian\",\n                value: \"Russian\"\n              }, {\n                label: \"Portuguese\",\n                value: \"Portuguese\"\n              }, {\n                label: \"Korean\",\n                value: \"Korean\"\n              }, {\n                label: \"Japanese\",\n                value: \"Japanese\"\n              }, {\n                label: \"Italian\",\n                value: \"Italian\"\n              }, {\n                label: \"Hindi\",\n                value: \"Hindi\"\n              }, {\n                label: \"French\",\n                value: \"French\"\n              }, {\n                label: \"Finnish\",\n                value: \"Finnish\"\n              }, {\n                label: \"Spanish\",\n                value: \"Spanish\"\n              }, {\n                label: \"Deutsch\",\n                value: \"Deutsch\"\n              }],\n              showFilter: true,\n              filterLabel: \"Language\",\n              URLParams: false,\n              innerClass: {\n                label: \"list-item\",\n                input: \"list-input\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-heading center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this), \" Release Date\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DateRange, {\n              componentId: \"date-filter\",\n              dataField: \"release_date\",\n              className: \"datePicker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReactiveList, {\n            componentId: \"resultLists\",\n            dataField: \"ResponseName\",\n            size: 25,\n            pagination: true,\n            react: {\n              \"and\": [\"title\"]\n            },\n            sortOptions: [{\n              label: \"Best Match\",\n              dataField: \"_score\",\n              sortBy: \"desc\"\n            }, {\n              label: \"Lowest Price\",\n              dataField: \"PriceInitial\",\n              sortBy: \"asc\"\n            }, {\n              label: \"Highest Price\",\n              dataField: \"PriceInitial\",\n              sortBy: \"desc\"\n            }],\n            className: \"result-list\",\n            innerClass: {\n              resultsInfo: \"resultsInfo\",\n              resultStats: \"resultStats\"\n            },\n            children: ({\n              data\n            }) => /*#__PURE__*/_jsxDEV(ResultListWrapper, {\n              children: data.map(item => /*#__PURE__*/_jsxDEV(ResultList, {\n                href: `https://store.steampowered.com/app/${item.ResponseID}`,\n                className: \"listItem\",\n                children: [/*#__PURE__*/_jsxDEV(ResultList.Image, {\n                  className: \"image\",\n                  src: item.HeaderImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(ResultList.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(ResultList.Title, {\n                    dangerouslySetInnerHTML: {\n                      __html: item.ResponseName\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ResultList.Description, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"releaseDate\",\n                      children: [\"$\", item.ReleaseDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"price\",\n                      children: [\"$$\", item.PriceInitial]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 45\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            onClick: this.handleClick.bind(this),\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hiro/react_project/react_search/react_search/frontend/src/App.js"],"names":["React","Component","DataSearch","ReactiveBase","ReactiveList","ResultList","SelectedFilters","MultiList","SingleRange","RangeSlider","MultiDataList","DateRange","ResultListWrapper","App","constructor","props","state","isClicked","message","handleClick","setState","render","typography","fontFamily","fontSize","colors","titleColor","textColor","backgroundColor","primaryColor","input","list","and","label","start","end","radio","value","dataField","sortBy","resultsInfo","resultStats","data","map","item","ResponseID","HeaderImage","__html","ResponseName","ReleaseDate","PriceInitial","_id","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {DataSearch, ReactiveBase, ReactiveList, ResultList, SelectedFilters, MultiList, SingleRange, RangeSlider, MultiDataList, DateRange} from '@appbaseio/reactivesearch';\nimport './SteamSearch.css';\n\nconst { ResultListWrapper } = ReactiveList;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          isClicked: false,\n          message: \"ðŸ”¬Show Filters\"\n        };\n      }\n    \n      handleClick() {\n        this.setState({\n          isClicked: !this.state.isClicked,\n          message: this.state.isClicked ? \"ðŸ”¬ Show Filters\" : \"ðŸŽ¬ Show Movies\"\n        });\n      }\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <ReactiveBase\n                    app=\"steam-search\"\n                    url=\"http://52.142.54.111:9200\"\n                    theme={\n                        {\n                            typography: {\n                                fontFamily: 'Arial, Helvetica, sans-serif',\n                                fontSize: '16px',\n                            },\n                            colors: {\n                                titleColor: '#c7d5e0',\n                                textColor: '#c7d5e0',\n                                backgroundColor: '#212121',\n                                primaryColor: '#2B475E',\n                            }\n                        }\n                    }\n                >\n                    <DataSearch\n                        componentId=\"title\"\n                        dataField={[\"ResponseName\"]}\n                        queryFormat=\"and\"\n                        placeholder=\"enter search term\"\n                        showIcon={false}\n                        title=\"Steam Search\"\n                        className=\"data-search\"\n                        innerClass={{\n                            input: 'input',\n                            list: 'list',\n                        }}\n                    />\n                    <SelectedFilters/>\n\n                    <div className=\"sub-container\">\n                            <div\n                                className={\n                                this.state.isClicked ? \"left-bar-optional\" : \"left-bar\"\n                                }   \n                            >\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-pied-piper-alt\" /> Genres{\" \"}\n                                    </b>\n                                </div>\n                                \n                                <MultiList\n                                    componentId=\"genres-list\"\n                                    const genre = {[\"RPG\", ]}\n                                    dataField={[\"GenreIs`{$genre}`\"]}\n                                    className=\"genres-filter\"\n                                    size={20}\n                                    sortBy=\"asc\"\n                                    queryFormat=\"or\"\n                                    selectAllLabel=\"All Genres\"\n                                    showCheckbox={true}\n                                    showCount={true}\n                                    showSearch={true}\n                                    placeholder=\"Search for a Genre\"\n                                    react={{          \n                                        and: [\n                                            \"mainSearch\",\n                                            \"results\",\n                                            \"date-filter\",\n                                            \"RangeSlider\",\n                                            \"language-list\",\n                                            \"revenue-list\"\n                                        ]\n                                    }}          \n                                    showFilter={true}\n                                    filterLabel=\"Genre\"\n                                    URLParams={false} \n                                    innerClass={{ \n                                        label: \"list-item\",\n                                        input: \"list-input\"\n                                    }}                    \n                                />\n                                <hr className=\"blue\" />\n\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-dollar\" /> Revenue{\" \"}\n                                    </b>\n                                </div>\n                                <SingleRange\n                                    componentId=\"revenue-list\"\n                                    dataField=\"ran_revenue\"\n                                    className=\"revenue-filter\"\n                                    data={[\n                                    { start: 0, end: 1000, label: \"< 1M\" },\n                                    { start: 1000, end: 10000, label: \"1M-10M\" },\n                                    { start: 10000, end: 500000, label: \"10M-500M\" },\n                                    { start: 500000, end: 1000000, label: \"500M-1B\" },\n                                    { start: 1000000, end: 10000000, label: \"> 1B\" }\n                                    ]}\n                                    showRadio={true}\n                                    showFilter={true}\n                                    filterLabel=\"Revenue\"\n                                    URLParams={false}\n                                    innerClass={{\n                                    label: \"revenue-label\",\n                                    radio: \"revenue-radio\"\n                                    }}\n                                />                                \n                                <hr className=\"blue\" />\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        <i className=\"fa fa-star\" /> Ratings\n                                    </b>\n                                </div>\n                                <RangeSlider\n                                    componentId=\"RangeSlider\"\n                                    dataField=\"vote_average\"\n                                    className=\"review-filter\"\n                                    range={{\n                                    start: 0,\n                                    end: 10\n                                    }}\n                                    rangeLabels={{\n                                    start: \"0\",\n                                    end: \"10\"\n                                    }}\n                                    react={{\n                                    and: [\n                                        \"mainSearch\",\n                                        \"results\",\n                                        \"language-list\",\n                                        \"date-Filter\",\n                                        \"genres-list\",\n                                        \"revenue-list\"\n                                    ]\n                                    }}\n                                />\n                                <hr className=\"blue\" />\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-language\" /> Languages{\" \"}\n                                    </b>\n                                </div>\n                                <MultiDataList\n                                    componentId=\"language-list\"\n                                    dataField=\"original_language.raw\"\n                                    className=\"language-filter\"\n                                    size={100}\n                                    sortBy=\"asc\"\n                                    queryFormat=\"or\"\n                                    selectAllLabel=\"All Languages\"\n                                    showCheckbox={true}\n                                    showSearch={true}\n                                    placeholder=\"Search for a language\"\n                                    react={{\n                                    and: [\n                                        \"mainSearch\",\n                                        \"results\",\n                                        \"date-filter\",\n                                        \"RangeSlider\",\n                                        \"genres-list\",\n                                        \"revenue-list\"\n                                    ]\n                                    }}\n                                    data={[\n                                    {\n                                        label: \"English\",\n                                        value: \"English\"\n                                    },\n                                    {\n                                        label: \"Chinese\",\n                                        value: \"Chinese\"\n                                    },\n                                    {\n                                        label: \"Turkish\",\n                                        value: \"Turkish\"\n                                    },\n                                    {\n                                        label: \"Swedish\",\n                                        value: \"Swedish\"\n                                    },\n                                    {\n                                        label: \"Russian\",\n                                        value: \"Russian\"\n                                    },\n                                    {\n                                        label: \"Portuguese\",\n                                        value: \"Portuguese\"\n                                    },\n                                    {\n                                        label: \"Korean\",\n                                        value: \"Korean\"\n                                    },\n                                    {\n                                        label: \"Japanese\",\n                                        value: \"Japanese\"\n                                    },\n                                    {\n                                        label: \"Italian\",\n                                        value: \"Italian\"\n                                    },\n                                    {\n                                        label: \"Hindi\",\n                                        value: \"Hindi\"\n                                    },\n                                    {\n                                        label: \"French\",\n                                        value: \"French\"\n                                    },\n                                    {\n                                        label: \"Finnish\",\n                                        value: \"Finnish\"\n                                    },\n                                    {\n                                        label: \"Spanish\",\n                                        value: \"Spanish\"\n                                    },\n                                    {\n                                        label: \"Deutsch\",\n                                        value: \"Deutsch\"\n                                    }\n                                    ]}\n                                    showFilter={true}\n                                    filterLabel=\"Language\"\n                                    URLParams={false}\n                                    innerClass={{\n                                    label: \"list-item\",\n                                    input: \"list-input\"\n                                    }}\n                                />\n                                <hr className=\"blue\" />\n\n                                <div className=\"filter-heading center\">\n                                    <b>\n                                        {\" \"}\n                                        <i className=\"fa fa-calendar\" /> Release Date{\" \"}\n                                    </b>\n                                </div>\n                                <DateRange\n                                    componentId=\"date-filter\"\n                                    dataField=\"release_date\"\n                                    className=\"datePicker\"\n                                />\n\n\n\n                            </div>\n\n                    <ReactiveList\n                        componentId=\"resultLists\"\n                        dataField=\"ResponseName\"\n                        size={25}\n                        pagination={true}\n                        react={{\n                            \"and\": [\"title\"]\n                        }}\n                        sortOptions={[\n                                {label: \"Best Match\", dataField: \"_score\", sortBy: \"desc\"},\n                                {label: \"Lowest Price\", dataField: \"PriceInitial\", sortBy: \"asc\"},\n                                {label: \"Highest Price\", dataField: \"PriceInitial\", sortBy: \"desc\"},\n                        ]}\n                        className=\"result-list\"\n                        innerClass={{\n                            resultsInfo: \"resultsInfo\",\n                            resultStats: \"resultStats\",\n                        }}\n                    >\n                        \n                        {({data}) => (\n                            <ResultListWrapper>\n                                {\n                                    data.map(item => (\n                                        <ResultList key={item._id}\n                                                    href={`https://store.steampowered.com/app/${item.ResponseID}`}\n                                                    className=\"listItem\"\n                                        >\n                                            <ResultList.Image className=\"image\" src={item.HeaderImage}/>\n                                            <ResultList.Content>\n                                                <ResultList.Title\n                                                    dangerouslySetInnerHTML={{\n                                                        __html: item.ResponseName\n                                                    }}\n                                                />\n                                                <ResultList.Description>\n                                                  <p className=\"releaseDate\">${item.ReleaseDate}</p>\n                                                  <p className=\"price\">$${item.PriceInitial}</p>\n                                                </ResultList.Description>\n                                            </ResultList.Content>\n                                        </ResultList>\n                                    ))\n                                }\n                            </ResultListWrapper>\n                        )}\n                    </ReactiveList>\n                    <button\n                        className=\"toggle-button\"\n                        onClick={this.handleClick.bind(this)}\n                        >\n                        {this.state.message}\n                    </button>\n                    </div>\n                </ReactiveBase>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}