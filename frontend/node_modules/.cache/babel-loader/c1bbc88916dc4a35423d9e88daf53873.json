{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _diacritics = require('./diacritics');\n\nvar _diacritics2 = _interopRequireDefault(_diacritics);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar flatten = function flatten(arr) {\n  return arr.reduce(function (flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n  }, []);\n};\n\nvar extractSuggestion = function extractSuggestion(val) {\n  switch (typeof val) {\n    case 'string':\n      return val;\n\n    case 'object':\n      if (Array.isArray(val)) {\n        return flatten(val);\n      }\n\n      return null;\n\n    default:\n      return val;\n  }\n};\n\nfunction replaceDiacritics(s) {\n  var str = s ? String(s) : '';\n\n  for (var i = 0; i < str.length; i++) {\n    var currentChar = str.charAt(i);\n\n    if (_diacritics2.default[currentChar]) {\n      str = str.replaceAll(currentChar, _diacritics2.default[currentChar]);\n    }\n  }\n\n  return str;\n}\n\nfunction escapeRegExp() {\n  var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nvar getPredictiveSuggestions = function getPredictiveSuggestions(_ref) {\n  var suggestions = _ref.suggestions,\n      currentValue = _ref.currentValue,\n      wordsToShowAfterHighlight = _ref.wordsToShowAfterHighlight;\n  var suggestionMap = {};\n\n  if (currentValue) {\n    var currentValueTrimmed = currentValue.trim();\n    var parsedSuggestion = suggestions.reduce(function (agg, _ref2) {\n      var label = _ref2.label,\n          rest = _objectWithoutProperties(_ref2, ['label']);\n\n      var parsedContent = new DOMParser().parseFromString(label, 'text/html').documentElement.textContent;\n      var regexString = '^(' + escapeRegExp(currentValueTrimmed) + ')\\\\w+';\n      var regex = new RegExp(regexString, 'i');\n      var regexExecution = regex.exec(parsedContent);\n\n      if (!regexExecution) {\n        regexString = '^(' + escapeRegExp(currentValueTrimmed) + ')';\n        regex = new RegExp(regexString, 'i');\n        regexExecution = regex.exec(parsedContent);\n      }\n\n      if (regexExecution) {\n        var matchedString = parsedContent.slice(regexExecution.index, parsedContent.length);\n        var highlightedWord = matchedString.slice(currentValueTrimmed.length).split(' ').slice(0, wordsToShowAfterHighlight + 1).join(' ');\n        var suggestionPhrase = currentValueTrimmed + '<mark class=\"highlight\">' + highlightedWord + '</mark>';\n        var suggestionValue = '' + currentValueTrimmed + highlightedWord;\n\n        if (!suggestionMap[suggestionPhrase]) {\n          suggestionMap[suggestionPhrase] = 1;\n          return [].concat(_toConsumableArray(agg), [_extends({}, rest, {\n            label: suggestionPhrase,\n            value: suggestionValue,\n            isPredictiveSuggestion: true\n          })]);\n        }\n\n        return agg;\n      }\n\n      return agg;\n    }, []);\n    return parsedSuggestion;\n  }\n\n  return [];\n};\n\nvar getSuggestions = function getSuggestions(_ref3) {\n  var fields = _ref3.fields,\n      suggestions = _ref3.suggestions,\n      currentValue = _ref3.currentValue,\n      _ref3$suggestionPrope = _ref3.suggestionProperties,\n      suggestionProperties = _ref3$suggestionPrope === undefined ? [] : _ref3$suggestionPrope,\n      _ref3$showDistinctSug = _ref3.showDistinctSuggestions,\n      showDistinctSuggestions = _ref3$showDistinctSug === undefined ? false : _ref3$showDistinctSug,\n      _ref3$enablePredictiv = _ref3.enablePredictiveSuggestions,\n      enablePredictiveSuggestions = _ref3$enablePredictiv === undefined ? false : _ref3$enablePredictiv,\n      _ref3$wordsToShowAfte = _ref3.wordsToShowAfterHighlight,\n      wordsToShowAfterHighlight = _ref3$wordsToShowAfte === undefined ? 2 : _ref3$wordsToShowAfte,\n      enableSynonyms = _ref3.enableSynonyms;\n  var suggestionsList = [];\n  var labelsList = [];\n  var skipWordMatch = false;\n\n  var populateSuggestionsList = function populateSuggestionsList(val, parsedSource, source) {\n    var isWordMatch = skipWordMatch || currentValue.trim().split(' ').some(function (term) {\n      return replaceDiacritics(val).toLowerCase().includes(replaceDiacritics(term));\n    });\n\n    if (isWordMatch && !labelsList.includes(val) || source._promoted) {\n      var defaultOption = {\n        label: val,\n        value: val,\n        source: source\n      };\n      var additionalKeys = {};\n\n      if (Array.isArray(suggestionProperties) && suggestionProperties.length > 0) {\n        suggestionProperties.forEach(function (prop) {\n          if (parsedSource.hasOwnProperty(prop)) {\n            additionalKeys = _extends({}, additionalKeys, _defineProperty({}, prop, parsedSource[prop]));\n          }\n        });\n      }\n\n      var option = _extends({}, defaultOption, additionalKeys);\n\n      labelsList = [].concat(_toConsumableArray(labelsList), [val]);\n      suggestionsList = [].concat(_toConsumableArray(suggestionsList), [option]);\n\n      if (showDistinctSuggestions) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var parseField = function parseField(parsedSource) {\n    var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parsedSource;\n\n    if (typeof parsedSource === 'object') {\n      var fieldNodes = field.split('.');\n      var label = parsedSource[fieldNodes[0]];\n\n      if (parsedSource[field]) {\n        var topLabel = parsedSource[field];\n        var val = extractSuggestion(topLabel);\n\n        if (val) {\n          populateSuggestionsList(val, parsedSource, source);\n        }\n      }\n\n      if (Array.isArray(label)) {\n        if (label.length > 1) {\n          label = label.filter(function (i) {\n            return i && i.toString().toLowerCase().includes(currentValue.toString().toLowerCase());\n          });\n        }\n\n        label = label[0];\n      }\n\n      if (label) {\n        if (fieldNodes.length > 1) {\n          var children = field.substring(fieldNodes[0].length + 1);\n          parseField(label, children, source);\n        } else {\n          var _val = extractSuggestion(label);\n\n          if (_val) {\n            return populateSuggestionsList(_val, parsedSource, source);\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var traverseSuggestions = function traverseSuggestions() {\n    if (showDistinctSuggestions) {\n      suggestions.forEach(function (item) {\n        fields.some(function (field) {\n          return parseField(item, field);\n        });\n      });\n    } else {\n      suggestions.forEach(function (item) {\n        fields.forEach(function (field) {\n          parseField(item, field);\n        });\n      });\n    }\n  };\n\n  traverseSuggestions();\n\n  if (suggestionsList.length < suggestions.length && !skipWordMatch && enableSynonyms) {\n    skipWordMatch = true;\n    traverseSuggestions();\n  }\n\n  if (enablePredictiveSuggestions) {\n    var predictiveSuggestions = getPredictiveSuggestions({\n      suggestions: suggestionsList,\n      currentValue: currentValue,\n      wordsToShowAfterHighlight: wordsToShowAfterHighlight\n    });\n    suggestionsList = predictiveSuggestions;\n  }\n\n  return suggestionsList;\n};\n\nexports.default = getSuggestions;","map":{"version":3,"sources":["C:/Users/hiro/react_project/react_search/react_search/frontend/node_modules/@appbaseio/reactivecore/lib/utils/suggestions.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_diacritics","require","_diacritics2","_interopRequireDefault","obj","__esModule","default","_defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","from","_objectWithoutProperties","keys","indexOf","flatten","reduce","flat","toFlatten","concat","extractSuggestion","val","replaceDiacritics","s","str","String","currentChar","charAt","replaceAll","escapeRegExp","string","undefined","replace","getPredictiveSuggestions","_ref","suggestions","currentValue","wordsToShowAfterHighlight","suggestionMap","currentValueTrimmed","trim","parsedSuggestion","agg","_ref2","label","rest","parsedContent","DOMParser","parseFromString","documentElement","textContent","regexString","regex","RegExp","regexExecution","exec","matchedString","slice","index","highlightedWord","split","join","suggestionPhrase","suggestionValue","isPredictiveSuggestion","getSuggestions","_ref3","fields","_ref3$suggestionPrope","suggestionProperties","_ref3$showDistinctSug","showDistinctSuggestions","_ref3$enablePredictiv","enablePredictiveSuggestions","_ref3$wordsToShowAfte","enableSynonyms","suggestionsList","labelsList","skipWordMatch","populateSuggestionsList","parsedSource","isWordMatch","some","term","toLowerCase","includes","_promoted","defaultOption","additionalKeys","forEach","prop","option","parseField","field","fieldNodes","topLabel","filter","toString","children","substring","_val","traverseSuggestions","item","predictiveSuggestions"],"mappings":"AAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;;AAAyD,IAAIC,QAAQ,GAACJ,MAAM,CAACK,MAAP,IAAe,UAASC,MAAT,EAAgB;AAAC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,SAAS,CAACC,MAAxB,EAA+BF,CAAC,EAAhC,EAAmC;AAAC,QAAIG,MAAM,GAACF,SAAS,CAACD,CAAD,CAApB;;AAAwB,SAAI,IAAII,GAAR,IAAeD,MAAf,EAAsB;AAAC,UAAGV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA4CC,GAA5C,CAAH,EAAoD;AAACL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAYD,MAAM,CAACC,GAAD,CAAlB;AAAyB;AAAC;AAAC;;AAAA,SAAOL,MAAP;AAAe,CAA/N;;AAAgO,IAAIS,WAAW,GAACC,OAAO,CAAC,cAAD,CAAvB;;AAAwC,IAAIC,YAAY,GAACC,sBAAsB,CAACH,WAAD,CAAvC;;AAAqD,SAASG,sBAAT,CAAgCC,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACE,IAAAA,OAAO,EAACF;AAAT,GAA/B;AAA8C;;AAAA,SAASG,eAAT,CAAyBH,GAAzB,EAA6BR,GAA7B,EAAiCR,KAAjC,EAAuC;AAAC,MAAGQ,GAAG,IAAIQ,GAAV,EAAc;AAACnB,IAAAA,MAAM,CAACC,cAAP,CAAsBkB,GAAtB,EAA0BR,GAA1B,EAA8B;AAACR,MAAAA,KAAK,EAACA,KAAP;AAAaoB,MAAAA,UAAU,EAAC,IAAxB;AAA6BC,MAAAA,YAAY,EAAC,IAA1C;AAA+CC,MAAAA,QAAQ,EAAC;AAAxD,KAA9B;AAA8F,GAA7G,MAAiH;AAACN,IAAAA,GAAG,CAACR,GAAD,CAAH,GAASR,KAAT;AAAgB;;AAAA,SAAOgB,GAAP;AAAY;;AAAA,SAASO,kBAAT,CAA4BC,GAA5B,EAAgC;AAAC,MAAGC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAH,EAAsB;AAAC,SAAI,IAAIpB,CAAC,GAAC,CAAN,EAAQuB,IAAI,GAACF,KAAK,CAACD,GAAG,CAAClB,MAAL,CAAtB,EAAmCF,CAAC,GAACoB,GAAG,CAAClB,MAAzC,EAAgDF,CAAC,EAAjD,EAAoD;AAACuB,MAAAA,IAAI,CAACvB,CAAD,CAAJ,GAAQoB,GAAG,CAACpB,CAAD,CAAX;AAAgB;;AAAA,WAAOuB,IAAP;AAAa,GAAzG,MAA6G;AAAC,WAAOF,KAAK,CAACG,IAAN,CAAWJ,GAAX,CAAP;AAAwB;AAAC;;AAAA,SAASK,wBAAT,CAAkCb,GAAlC,EAAsCc,IAAtC,EAA2C;AAAC,MAAI3B,MAAM,GAAC,EAAX;;AAAc,OAAI,IAAIC,CAAR,IAAaY,GAAb,EAAiB;AAAC,QAAGc,IAAI,CAACC,OAAL,CAAa3B,CAAb,KAAiB,CAApB,EAAsB;AAAS,QAAG,CAACP,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCK,GAArC,EAAyCZ,CAAzC,CAAJ,EAAgD;AAASD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAUY,GAAG,CAACZ,CAAD,CAAb;AAAkB;;AAAA,SAAOD,MAAP;AAAe;;AAAA,IAAI6B,OAAO,GAAC,SAASA,OAAT,CAAiBR,GAAjB,EAAqB;AAAC,SAAOA,GAAG,CAACS,MAAJ,CAAW,UAASC,IAAT,EAAcC,SAAd,EAAwB;AAAC,WAAOD,IAAI,CAACE,MAAL,CAAYX,KAAK,CAACC,OAAN,CAAcS,SAAd,IAAyBH,OAAO,CAACG,SAAD,CAAhC,GAA4CA,SAAxD,CAAP;AAA2E,GAA/G,EAAgH,EAAhH,CAAP;AAA4H,CAA9J;;AAA+J,IAAIE,iBAAiB,GAAC,SAASA,iBAAT,CAA2BC,GAA3B,EAA+B;AAAC,UAAO,OAAOA,GAAd;AAAmB,SAAI,QAAJ;AAAa,aAAOA,GAAP;;AAAW,SAAI,QAAJ;AAAa,UAAGb,KAAK,CAACC,OAAN,CAAcY,GAAd,CAAH,EAAsB;AAAC,eAAON,OAAO,CAACM,GAAD,CAAd;AAAqB;;AAAA,aAAO,IAAP;;AAAY;AAAQ,aAAOA,GAAP;AAAxH;AAAqI,CAA3L;;AAA4L,SAASC,iBAAT,CAA2BC,CAA3B,EAA6B;AAAC,MAAIC,GAAG,GAACD,CAAC,GAACE,MAAM,CAACF,CAAD,CAAP,GAAW,EAApB;;AAAuB,OAAI,IAAIpC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACqC,GAAG,CAACnC,MAAlB,EAAyBF,CAAC,EAA1B,EAA6B;AAAC,QAAIuC,WAAW,GAACF,GAAG,CAACG,MAAJ,CAAWxC,CAAX,CAAhB;;AAA8B,QAAGU,YAAY,CAACI,OAAb,CAAqByB,WAArB,CAAH,EAAqC;AAACF,MAAAA,GAAG,GAACA,GAAG,CAACI,UAAJ,CAAeF,WAAf,EAA2B7B,YAAY,CAACI,OAAb,CAAqByB,WAArB,CAA3B,CAAJ;AAAmE;AAAC;;AAAA,SAAOF,GAAP;AAAY;;AAAA,SAASK,YAAT,GAAuB;AAAC,MAAIC,MAAM,GAAC1C,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAe2C,SAAnC,GAA6C3C,SAAS,CAAC,CAAD,CAAtD,GAA0D,EAArE;AAAwE,SAAO0C,MAAM,CAACE,OAAP,CAAe,qBAAf,EAAqC,MAArC,CAAP;AAAqD;;AAAA,IAAIC,wBAAwB,GAAC,SAASA,wBAAT,CAAkCC,IAAlC,EAAuC;AAAC,MAAIC,WAAW,GAACD,IAAI,CAACC,WAArB;AAAA,MAAiCC,YAAY,GAACF,IAAI,CAACE,YAAnD;AAAA,MAAgEC,yBAAyB,GAACH,IAAI,CAACG,yBAA/F;AAAyH,MAAIC,aAAa,GAAC,EAAlB;;AAAqB,MAAGF,YAAH,EAAgB;AAAC,QAAIG,mBAAmB,GAACH,YAAY,CAACI,IAAb,EAAxB;AAA4C,QAAIC,gBAAgB,GAACN,WAAW,CAACnB,MAAZ,CAAmB,UAAS0B,GAAT,EAAaC,KAAb,EAAmB;AAAC,UAAIC,KAAK,GAACD,KAAK,CAACC,KAAhB;AAAA,UAAsBC,IAAI,GAACjC,wBAAwB,CAAC+B,KAAD,EAAO,CAAC,OAAD,CAAP,CAAnD;;AAAqE,UAAIG,aAAa,GAAC,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCJ,KAAhC,EAAsC,WAAtC,EAAmDK,eAAnD,CAAmEC,WAArF;AAAiG,UAAIC,WAAW,GAAC,OAAKtB,YAAY,CAACU,mBAAD,CAAjB,GAAuC,OAAvD;AAA+D,UAAIa,KAAK,GAAC,IAAIC,MAAJ,CAAWF,WAAX,EAAuB,GAAvB,CAAV;AAAsC,UAAIG,cAAc,GAACF,KAAK,CAACG,IAAN,CAAWT,aAAX,CAAnB;;AAA6C,UAAG,CAACQ,cAAJ,EAAmB;AAACH,QAAAA,WAAW,GAAC,OAAKtB,YAAY,CAACU,mBAAD,CAAjB,GAAuC,GAAnD;AAAuDa,QAAAA,KAAK,GAAC,IAAIC,MAAJ,CAAWF,WAAX,EAAuB,GAAvB,CAAN;AAAkCG,QAAAA,cAAc,GAACF,KAAK,CAACG,IAAN,CAAWT,aAAX,CAAf;AAA0C;;AAAA,UAAGQ,cAAH,EAAkB;AAAC,YAAIE,aAAa,GAACV,aAAa,CAACW,KAAd,CAAoBH,cAAc,CAACI,KAAnC,EAAyCZ,aAAa,CAACzD,MAAvD,CAAlB;AAAiF,YAAIsE,eAAe,GAACH,aAAa,CAACC,KAAd,CAAoBlB,mBAAmB,CAAClD,MAAxC,EAAgDuE,KAAhD,CAAsD,GAAtD,EAA2DH,KAA3D,CAAiE,CAAjE,EAAmEpB,yBAAyB,GAAC,CAA7F,EAAgGwB,IAAhG,CAAqG,GAArG,CAApB;AAA8H,YAAIC,gBAAgB,GAACvB,mBAAmB,GAAC,0BAApB,GAA+CoB,eAA/C,GAA+D,SAApF;AAA8F,YAAII,eAAe,GAAC,KAAGxB,mBAAH,GAAuBoB,eAA3C;;AAA2D,YAAG,CAACrB,aAAa,CAACwB,gBAAD,CAAjB,EAAoC;AAACxB,UAAAA,aAAa,CAACwB,gBAAD,CAAb,GAAgC,CAAhC;AAAkC,iBAAM,GAAG3C,MAAH,CAAUb,kBAAkB,CAACoC,GAAD,CAA5B,EAAkC,CAAC1D,QAAQ,CAAC,EAAD,EAAI6D,IAAJ,EAAS;AAACD,YAAAA,KAAK,EAACkB,gBAAP;AAAwB/E,YAAAA,KAAK,EAACgF,eAA9B;AAA8CC,YAAAA,sBAAsB,EAAC;AAArE,WAAT,CAAT,CAAlC,CAAN;AAAyI;;AAAA,eAAOtB,GAAP;AAAY;;AAAA,aAAOA,GAAP;AAAY,KAAzlC,EAA0lC,EAA1lC,CAArB;AAAmnC,WAAOD,gBAAP;AAAyB;;AAAA,SAAM,EAAN;AAAU,CAAt6C;;AAAu6C,IAAIwB,cAAc,GAAC,SAASA,cAAT,CAAwBC,KAAxB,EAA8B;AAAC,MAAIC,MAAM,GAACD,KAAK,CAACC,MAAjB;AAAA,MAAwBhC,WAAW,GAAC+B,KAAK,CAAC/B,WAA1C;AAAA,MAAsDC,YAAY,GAAC8B,KAAK,CAAC9B,YAAzE;AAAA,MAAsFgC,qBAAqB,GAACF,KAAK,CAACG,oBAAlH;AAAA,MAAuIA,oBAAoB,GAACD,qBAAqB,KAAGrC,SAAxB,GAAkC,EAAlC,GAAqCqC,qBAAjM;AAAA,MAAuNE,qBAAqB,GAACJ,KAAK,CAACK,uBAAnP;AAAA,MAA2QA,uBAAuB,GAACD,qBAAqB,KAAGvC,SAAxB,GAAkC,KAAlC,GAAwCuC,qBAA3U;AAAA,MAAiWE,qBAAqB,GAACN,KAAK,CAACO,2BAA7X;AAAA,MAAyZA,2BAA2B,GAACD,qBAAqB,KAAGzC,SAAxB,GAAkC,KAAlC,GAAwCyC,qBAA7d;AAAA,MAAmfE,qBAAqB,GAACR,KAAK,CAAC7B,yBAA/gB;AAAA,MAAyiBA,yBAAyB,GAACqC,qBAAqB,KAAG3C,SAAxB,GAAkC,CAAlC,GAAoC2C,qBAAvmB;AAAA,MAA6nBC,cAAc,GAACT,KAAK,CAACS,cAAlpB;AAAiqB,MAAIC,eAAe,GAAC,EAApB;AAAuB,MAAIC,UAAU,GAAC,EAAf;AAAkB,MAAIC,aAAa,GAAC,KAAlB;;AAAwB,MAAIC,uBAAuB,GAAC,SAASA,uBAAT,CAAiC1D,GAAjC,EAAqC2D,YAArC,EAAkD1F,MAAlD,EAAyD;AAAC,QAAI2F,WAAW,GAACH,aAAa,IAAE1C,YAAY,CAACI,IAAb,GAAoBoB,KAApB,CAA0B,GAA1B,EAA+BsB,IAA/B,CAAoC,UAASC,IAAT,EAAc;AAAC,aAAO7D,iBAAiB,CAACD,GAAD,CAAjB,CAAuB+D,WAAvB,GAAqCC,QAArC,CAA8C/D,iBAAiB,CAAC6D,IAAD,CAA/D,CAAP;AAA+E,KAAlI,CAA/B;;AAAmK,QAAGF,WAAW,IAAE,CAACJ,UAAU,CAACQ,QAAX,CAAoBhE,GAApB,CAAd,IAAwC/B,MAAM,CAACgG,SAAlD,EAA4D;AAAC,UAAIC,aAAa,GAAC;AAAC3C,QAAAA,KAAK,EAACvB,GAAP;AAAWtC,QAAAA,KAAK,EAACsC,GAAjB;AAAqB/B,QAAAA,MAAM,EAACA;AAA5B,OAAlB;AAAsD,UAAIkG,cAAc,GAAC,EAAnB;;AAAsB,UAAGhF,KAAK,CAACC,OAAN,CAAc4D,oBAAd,KAAqCA,oBAAoB,CAAChF,MAArB,GAA4B,CAApE,EAAsE;AAACgF,QAAAA,oBAAoB,CAACoB,OAArB,CAA6B,UAASC,IAAT,EAAc;AAAC,cAAGV,YAAY,CAACvF,cAAb,CAA4BiG,IAA5B,CAAH,EAAqC;AAACF,YAAAA,cAAc,GAACxG,QAAQ,CAAC,EAAD,EAAIwG,cAAJ,EAAmBtF,eAAe,CAAC,EAAD,EAAIwF,IAAJ,EAASV,YAAY,CAACU,IAAD,CAArB,CAAlC,CAAvB;AAAwF;AAAC,SAA3K;AAA8K;;AAAA,UAAIC,MAAM,GAAC3G,QAAQ,CAAC,EAAD,EAAIuG,aAAJ,EAAkBC,cAAlB,CAAnB;;AAAqDX,MAAAA,UAAU,GAAC,GAAG1D,MAAH,CAAUb,kBAAkB,CAACuE,UAAD,CAA5B,EAAyC,CAACxD,GAAD,CAAzC,CAAX;AAA2DuD,MAAAA,eAAe,GAAC,GAAGzD,MAAH,CAAUb,kBAAkB,CAACsE,eAAD,CAA5B,EAA8C,CAACe,MAAD,CAA9C,CAAhB;;AAAwE,UAAGpB,uBAAH,EAA2B;AAAC,eAAO,IAAP;AAAa;AAAC;;AAAA,WAAO,KAAP;AAAc,GAAv2B;;AAAw2B,MAAIqB,UAAU,GAAC,SAASA,UAAT,CAAoBZ,YAApB,EAAiC;AAAC,QAAIa,KAAK,GAACzG,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAe2C,SAAnC,GAA6C3C,SAAS,CAAC,CAAD,CAAtD,GAA0D,EAApE;AAAuE,QAAIE,MAAM,GAACF,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAe2C,SAAnC,GAA6C3C,SAAS,CAAC,CAAD,CAAtD,GAA0D4F,YAArE;;AAAkF,QAAG,OAAOA,YAAP,KAAsB,QAAzB,EAAkC;AAAC,UAAIc,UAAU,GAACD,KAAK,CAACjC,KAAN,CAAY,GAAZ,CAAf;AAAgC,UAAIhB,KAAK,GAACoC,YAAY,CAACc,UAAU,CAAC,CAAD,CAAX,CAAtB;;AAAsC,UAAGd,YAAY,CAACa,KAAD,CAAf,EAAuB;AAAC,YAAIE,QAAQ,GAACf,YAAY,CAACa,KAAD,CAAzB;AAAiC,YAAIxE,GAAG,GAACD,iBAAiB,CAAC2E,QAAD,CAAzB;;AAAoC,YAAG1E,GAAH,EAAO;AAAC0D,UAAAA,uBAAuB,CAAC1D,GAAD,EAAK2D,YAAL,EAAkB1F,MAAlB,CAAvB;AAAkD;AAAC;;AAAA,UAAGkB,KAAK,CAACC,OAAN,CAAcmC,KAAd,CAAH,EAAwB;AAAC,YAAGA,KAAK,CAACvD,MAAN,GAAa,CAAhB,EAAkB;AAACuD,UAAAA,KAAK,GAACA,KAAK,CAACoD,MAAN,CAAa,UAAS7G,CAAT,EAAW;AAAC,mBAAOA,CAAC,IAAEA,CAAC,CAAC8G,QAAF,GAAab,WAAb,GAA2BC,QAA3B,CAAoCjD,YAAY,CAAC6D,QAAb,GAAwBb,WAAxB,EAApC,CAAV;AAAsF,WAA/G,CAAN;AAAwH;;AAAAxC,QAAAA,KAAK,GAACA,KAAK,CAAC,CAAD,CAAX;AAAgB;;AAAA,UAAGA,KAAH,EAAS;AAAC,YAAGkD,UAAU,CAACzG,MAAX,GAAkB,CAArB,EAAuB;AAAC,cAAI6G,QAAQ,GAACL,KAAK,CAACM,SAAN,CAAgBL,UAAU,CAAC,CAAD,CAAV,CAAczG,MAAd,GAAqB,CAArC,CAAb;AAAqDuG,UAAAA,UAAU,CAAChD,KAAD,EAAOsD,QAAP,EAAgB5G,MAAhB,CAAV;AAAmC,SAAhH,MAAoH;AAAC,cAAI8G,IAAI,GAAChF,iBAAiB,CAACwB,KAAD,CAA1B;;AAAkC,cAAGwD,IAAH,EAAQ;AAAC,mBAAOrB,uBAAuB,CAACqB,IAAD,EAAMpB,YAAN,EAAmB1F,MAAnB,CAA9B;AAA0D;AAAC;AAAC;AAAC;;AAAA,WAAO,KAAP;AAAc,GAAp3B;;AAAq3B,MAAI+G,mBAAmB,GAAC,SAASA,mBAAT,GAA8B;AAAC,QAAG9B,uBAAH,EAA2B;AAACpC,MAAAA,WAAW,CAACsD,OAAZ,CAAoB,UAASa,IAAT,EAAc;AAACnC,QAAAA,MAAM,CAACe,IAAP,CAAY,UAASW,KAAT,EAAe;AAAC,iBAAOD,UAAU,CAACU,IAAD,EAAMT,KAAN,CAAjB;AAA+B,SAA3D;AAA8D,OAAjG;AAAoG,KAAhI,MAAoI;AAAC1D,MAAAA,WAAW,CAACsD,OAAZ,CAAoB,UAASa,IAAT,EAAc;AAACnC,QAAAA,MAAM,CAACsB,OAAP,CAAe,UAASI,KAAT,EAAe;AAACD,UAAAA,UAAU,CAACU,IAAD,EAAMT,KAAN,CAAV;AAAwB,SAAvD;AAA0D,OAA7F;AAAgG;AAAC,GAA7R;;AAA8RQ,EAAAA,mBAAmB;;AAAG,MAAGzB,eAAe,CAACvF,MAAhB,GAAuB8C,WAAW,CAAC9C,MAAnC,IAA2C,CAACyF,aAA5C,IAA2DH,cAA9D,EAA6E;AAACG,IAAAA,aAAa,GAAC,IAAd;AAAmBuB,IAAAA,mBAAmB;AAAI;;AAAA,MAAG5B,2BAAH,EAA+B;AAAC,QAAI8B,qBAAqB,GAACtE,wBAAwB,CAAC;AAACE,MAAAA,WAAW,EAACyC,eAAb;AAA6BxC,MAAAA,YAAY,EAACA,YAA1C;AAAuDC,MAAAA,yBAAyB,EAACA;AAAjF,KAAD,CAAlD;AAAgKuC,IAAAA,eAAe,GAAC2B,qBAAhB;AAAuC;;AAAA,SAAO3B,eAAP;AAAwB,CAA5pG;;AAA6pG9F,OAAO,CAACmB,OAAR,GAAgBgE,cAAhB","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _diacritics=require('./diacritics');var _diacritics2=_interopRequireDefault(_diacritics);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var flatten=function flatten(arr){return arr.reduce(function(flat,toFlatten){return flat.concat(Array.isArray(toFlatten)?flatten(toFlatten):toFlatten);},[]);};var extractSuggestion=function extractSuggestion(val){switch(typeof val){case'string':return val;case'object':if(Array.isArray(val)){return flatten(val);}return null;default:return val;}};function replaceDiacritics(s){var str=s?String(s):'';for(var i=0;i<str.length;i++){var currentChar=str.charAt(i);if(_diacritics2.default[currentChar]){str=str.replaceAll(currentChar,_diacritics2.default[currentChar]);}}return str;}function escapeRegExp(){var string=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return string.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');}var getPredictiveSuggestions=function getPredictiveSuggestions(_ref){var suggestions=_ref.suggestions,currentValue=_ref.currentValue,wordsToShowAfterHighlight=_ref.wordsToShowAfterHighlight;var suggestionMap={};if(currentValue){var currentValueTrimmed=currentValue.trim();var parsedSuggestion=suggestions.reduce(function(agg,_ref2){var label=_ref2.label,rest=_objectWithoutProperties(_ref2,['label']);var parsedContent=new DOMParser().parseFromString(label,'text/html').documentElement.textContent;var regexString='^('+escapeRegExp(currentValueTrimmed)+')\\\\w+';var regex=new RegExp(regexString,'i');var regexExecution=regex.exec(parsedContent);if(!regexExecution){regexString='^('+escapeRegExp(currentValueTrimmed)+')';regex=new RegExp(regexString,'i');regexExecution=regex.exec(parsedContent);}if(regexExecution){var matchedString=parsedContent.slice(regexExecution.index,parsedContent.length);var highlightedWord=matchedString.slice(currentValueTrimmed.length).split(' ').slice(0,wordsToShowAfterHighlight+1).join(' ');var suggestionPhrase=currentValueTrimmed+'<mark class=\"highlight\">'+highlightedWord+'</mark>';var suggestionValue=''+currentValueTrimmed+highlightedWord;if(!suggestionMap[suggestionPhrase]){suggestionMap[suggestionPhrase]=1;return[].concat(_toConsumableArray(agg),[_extends({},rest,{label:suggestionPhrase,value:suggestionValue,isPredictiveSuggestion:true})]);}return agg;}return agg;},[]);return parsedSuggestion;}return[];};var getSuggestions=function getSuggestions(_ref3){var fields=_ref3.fields,suggestions=_ref3.suggestions,currentValue=_ref3.currentValue,_ref3$suggestionPrope=_ref3.suggestionProperties,suggestionProperties=_ref3$suggestionPrope===undefined?[]:_ref3$suggestionPrope,_ref3$showDistinctSug=_ref3.showDistinctSuggestions,showDistinctSuggestions=_ref3$showDistinctSug===undefined?false:_ref3$showDistinctSug,_ref3$enablePredictiv=_ref3.enablePredictiveSuggestions,enablePredictiveSuggestions=_ref3$enablePredictiv===undefined?false:_ref3$enablePredictiv,_ref3$wordsToShowAfte=_ref3.wordsToShowAfterHighlight,wordsToShowAfterHighlight=_ref3$wordsToShowAfte===undefined?2:_ref3$wordsToShowAfte,enableSynonyms=_ref3.enableSynonyms;var suggestionsList=[];var labelsList=[];var skipWordMatch=false;var populateSuggestionsList=function populateSuggestionsList(val,parsedSource,source){var isWordMatch=skipWordMatch||currentValue.trim().split(' ').some(function(term){return replaceDiacritics(val).toLowerCase().includes(replaceDiacritics(term));});if(isWordMatch&&!labelsList.includes(val)||source._promoted){var defaultOption={label:val,value:val,source:source};var additionalKeys={};if(Array.isArray(suggestionProperties)&&suggestionProperties.length>0){suggestionProperties.forEach(function(prop){if(parsedSource.hasOwnProperty(prop)){additionalKeys=_extends({},additionalKeys,_defineProperty({},prop,parsedSource[prop]));}});}var option=_extends({},defaultOption,additionalKeys);labelsList=[].concat(_toConsumableArray(labelsList),[val]);suggestionsList=[].concat(_toConsumableArray(suggestionsList),[option]);if(showDistinctSuggestions){return true;}}return false;};var parseField=function parseField(parsedSource){var field=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:parsedSource;if(typeof parsedSource==='object'){var fieldNodes=field.split('.');var label=parsedSource[fieldNodes[0]];if(parsedSource[field]){var topLabel=parsedSource[field];var val=extractSuggestion(topLabel);if(val){populateSuggestionsList(val,parsedSource,source);}}if(Array.isArray(label)){if(label.length>1){label=label.filter(function(i){return i&&i.toString().toLowerCase().includes(currentValue.toString().toLowerCase());});}label=label[0];}if(label){if(fieldNodes.length>1){var children=field.substring(fieldNodes[0].length+1);parseField(label,children,source);}else{var _val=extractSuggestion(label);if(_val){return populateSuggestionsList(_val,parsedSource,source);}}}}return false;};var traverseSuggestions=function traverseSuggestions(){if(showDistinctSuggestions){suggestions.forEach(function(item){fields.some(function(field){return parseField(item,field);});});}else{suggestions.forEach(function(item){fields.forEach(function(field){parseField(item,field);});});}};traverseSuggestions();if(suggestionsList.length<suggestions.length&&!skipWordMatch&&enableSynonyms){skipWordMatch=true;traverseSuggestions();}if(enablePredictiveSuggestions){var predictiveSuggestions=getPredictiveSuggestions({suggestions:suggestionsList,currentValue:currentValue,wordsToShowAfterHighlight:wordsToShowAfterHighlight});suggestionsList=predictiveSuggestions;}return suggestionsList;};exports.default=getSuggestions;"]},"metadata":{},"sourceType":"script"}