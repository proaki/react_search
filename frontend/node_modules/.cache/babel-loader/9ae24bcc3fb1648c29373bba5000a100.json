{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiro\\\\react_project\\\\react_search\\\\react_search\\\\frontend\\\\src\\\\chat-bot\\\\chat-bot\\\\src\\\\components\\\\Chats.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { Chat } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  \"chats\": {\n    height: 400,\n    padding: '0',\n    overflow: 'auto'\n  }\n}));\n\nconst Chats = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.chats,\n    id: \"scroll-area\",\n    children: props.chats.map((chat, index) => {\n      return /*#__PURE__*/_jsxDEV(Chat, {\n        text: chat.text,\n        type: chat.type\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chats, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["C:/Users/hiro/react_project/react_search/react_search/frontend/src/chat-bot/chat-bot/src/components/Chats.jsx"],"names":["React","createStyles","makeStyles","List","Chat","useStyles","height","padding","overflow","Chats","props","classes","chats","map","chat","index","text","type","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,IAAR,QAAmB,SAAnB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,MAC3BD,YAAY,CAAC;AACX,WAAS;AACPK,IAAAA,MAAM,EAAE,GADD;AAEPC,IAAAA,OAAO,EAAE,GAFF;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AADE,CAAD,CADc,CAA5B;;AAUA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACC,KAAzB;AAAgC,IAAA,EAAE,EAAE,aAApC;AAAA,cACGF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED,IAAI,CAACE,IAAjB;AAAuB,QAAA,IAAI,EAAEF,IAAI,CAACG;AAAlC,SAA6CF,KAAK,CAACG,QAAN,EAA7C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;GAAMT,K;UACYJ,S;;;KADZI,K;AAYN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport {Chat} from './index';\r\n\r\nconst useStyles = makeStyles(() => (\r\n  createStyles({\r\n    \"chats\": {\r\n      height: 400,\r\n      padding: '0',\r\n      overflow: 'auto'\r\n    }\r\n  })\r\n));\r\n\r\nconst Chats = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <List className={classes.chats} id={\"scroll-area\"}>\r\n      {props.chats.map((chat, index) => {\r\n        return <Chat text={chat.text} type={chat.type} key={index.toString()}/>\r\n      })}      \r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Chats"]},"metadata":{},"sourceType":"module"}